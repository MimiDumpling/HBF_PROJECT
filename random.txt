
Blueberry: #6B7A8F
Apricot: #F7882F
Citrus: #F7C331
Apple Core: #DCC7AA






# Sunday, January 1, 2017 12:00:00 AM
    start = "1483228800"

    # Sunday, January 15, 2017 11:59:59 PM
    middle_1 = "1484524799"

    # Monday, January 16, 2017 12:00:00 AM
    middle_2 = "1484524800"

    # Tuesday, January 31, 2017 11:59:59 PM
    stop = "1485907199"

"""(https://www.reddit.com/r/PoliticalDiscussion/comments/4479er/rules_explanations_and_reminders/). 
This is a subreddit for genuine discussion: * Don't post low effort comments like joke threads, memes, 
slogans, or links without context. * Help prevent this subreddit from becoming an echo chamber. 
Please don't downvote comments with which you disagree. * The downvote and report buttons 
are not disagree buttons. Please don't use them that way. Violators will be fed to the bear. 
--- *I am a bot, and this action was performed automatically. Please [contact the moderators 
of this subreddit](/message/compose/?to=/r/PoliticalDiscussion) if you have any questions or concerns.*"""

// make radar chart of trending words
		// var ctx_answers = $("#answers-radar").get(0).getContext("2d");

		// $.get("/answers-radar.json", function (data) {
		// 	var myAnswersRadarChart = new Chart(ctx, {
		// 	    type: 'radar',
		// 	    data: data,
		// 	    options: {}
		// 	});
		// 	$('#answersLegend').html(myAnswersRadarChart.generateLegend());
  //   	});	

# @app.route("/answers-radar.json")
# def displays_radar_chart():
#     """Parses answers for trending words and displays them in a radar chart."""

#     print "++++++++++++++++++++++++"
#     print "IT'S WORKING"

#     answers = Answer.query.order_by(Answer.body).all()
#     jan = []
#     july = []

#     for answer in answers:
#         formated_time = answer.created_at.strftime("%A %d, %B %Y %I:%M%p")
#         split_time = formated_time.split(" ")
#         month = split_time[2]

#         if month == "January":
#             jan.append(answer.body)
#         else:
#             july.append(answer.body)

#     # begin finding trending words for jan-feb         
#     word_freq_1 = {}
#     words_1 = []

#     for text in jan:
#         split_text = text.split(" ")

#         for word in split_text:
#             word = word.lower()
#             words_1.append(word)

#     for word in words_1:
#         if word in word_freq_1:
#             word_freq_1[word] += 1
#         else:
#             word_freq_1[word] = 1

#     dict_counter = 0
#     ignore = ["way", "day", "thing", "be", "have", "do", "say", "get", "make", 
#                 "go", "know", "use", "tell", "ask", "seem", "to", "of", "in", "for",
#                 "on", "with", "at", "by", "from", "up", "about", "into", "over", 
#                 "after", "the", "and", "a", "that", "I", "it", "not", "he", "as",
#                 "you", "this", "but", "his", "they", "her", "she", "or", "an", 
#                 "will", "my", "one", "all", "would", "there", "their", "what",
#                 "is", "how", "are", "if", "why", "was", "does", "we", "can", "did",
#                 "i", "has", "just", "us", "could", "who", "trump's", "been", "more",
#                 "so", "donald", "new", "think", "people"]

#     # sorts the dictionary by value            
#     sorted_word_freq_1 = sorted(word_freq_1, key=word_freq_1.get, reverse=True)
#     trending_1 = []

#     for word in sorted_word_freq_1:
#         if word not in ignore:
#             trending_1.append(word)

#     # begin finding trending words for second half of month
#     word_freq_2 = {}
#     words_2 = []

#     for text in july:
#         split_text = text.split(" ")

#         for word in split_text:
#             word = word.lower()
#             words_2.append(word)

#     for word in words_2:
#         if word in word_freq_2:
#             word_freq_2[word] += 1
#         else:
#             word_freq_2[word] = 1         

#     print word_freq_2        

#     data_dict3 = {}

#     return jsonify(data_dict3)
